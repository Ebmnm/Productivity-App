{"version":3,"sources":["components/Nav.js","components/Todo/TodoForm.js","components/Todo/TodoInfo.js","components/Todo/Todo.js","components/Todo/TodoList.js","components/Todo/TodoComplete.js","components/Task/TaskForm.js","components/Task/TaskInfo.js","components/Task/Task.js","components/Task/TaskList.js","components/Task/TaskComplete.js","components/Goal/GoalForm.js","components/Goal/GoalInfo.js","components/Goal/Goal.js","components/Goal/GoalList.js","components/Goal/GoalComplete.js","App.js","index.js"],"names":["NavLink","styled","Link","NavContainer","div","Nav","to","className","TodoForm","todos","setTodos","todoNameRef","useRef","ref","type","onClick","e","preventDefault","name","current","value","prev","id","uuid","complete","info","newTodos","filter","todo","TodoInfo","setInfo","todoInfoRef","setTodoInfo","todoInfo","prevTodos","onKeyPress","event","key","placeholder","Todo","toggleTodo","useState","dateRef","checked","onChange","date","todoDate","TodoList","find","map","LOCAL_STORAGE_KEY","TodoComplete","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","tasks","settasks","task","storedTasks","goals","setgoals","goal","Container","App","path","exact","component","TaskComplete","GoalComplete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a8c3b44.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\nimport styled from \"styled-components\"\r\nimport {Link} from \"react-router-dom\"\r\nimport \"./style.css\"\r\n\r\nconst NavLink = styled(Link)`\r\nfont-size: 2rem;\r\ncolor:white;\r\ntext-decoration:none;\r\nwidth: auto;\r\npadding:1em;\r\nheight: auto;\r\nwidth: 33%;\r\ndisplay: flex;\r\njustify-content: center;\r\ncursor: pointer;\r\n\r\n@media screen and (max-width:830px){\r\nfont-size: 1em;\r\nmin-height: 60px;\r\nalign-items: center;\r\n\r\n}\r\n` \r\n\r\nconst NavContainer = styled.div`\r\ndisplay: flex;\r\njustify-content:space-around;\r\nborder-bottom: 8px white solid;\r\nalign-items: center;\r\nwidth: 100%;\r\n\r\n\r\n`\r\nexport default function Nav() {\r\n    return (\r\n        <div>\r\n            <NavContainer>\r\n            <NavLink to=\"/Productivity-App\"> Daily</NavLink>\r\n            <NavLink to=\"/Productivity-App/custom\" className=\"side-border\"> Custom</NavLink>\r\n            <NavLink to=\"/Productivity-App/long\"> Long Term</NavLink>\r\n            </NavContainer>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef} from 'react'\r\n\r\n\r\nimport uuid from \"uuidv4\"\r\n\r\n\r\n\r\nexport default function TodoForm({todos, setTodos}) {\r\n\r\nconst todoNameRef = useRef()\r\n\r\n    function addTodo(e) {\r\n        e.preventDefault()\r\n        const name = todoNameRef.current.value\r\n         if(name === \"\") return\r\n         setTodos(prev => {\r\n             return [...prev, {id: uuid(), name: name, complete: false, info:\"\"}]\r\n         })\r\n         todoNameRef.current.value = null\r\n     }\r\n\r\n    function deleteCheckedTodo() {\r\n        let newTodos = [...todos]\r\n       newTodos = newTodos.filter(todo => {\r\n        return todo.complete === false\r\n        })\r\n        setTodos(newTodos)\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-form-div\">\r\n            <form className=\"todo-form\">\r\n            <input className=\"new-todo-input\" ref={todoNameRef} type=\"text\" />\r\n            <button className=\"add-button\" onClick={addTodo}>Add Todo</button>\r\n            </form>\r\n            <button className=\"delete-button\" onClick={deleteCheckedTodo}>Delete Checked Todos </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useRef} from 'react'\r\nimport \"../style.css\"\r\n\r\n\r\n\r\n\r\nexport default function TodoInfo({todo, info, setInfo, setTodos}) {\r\n\r\nconst todoInfoRef = useRef()\r\n \r\nfunction closeInfo() {\r\n    setInfo(false)\r\n}\r\n\r\nfunction setTodoInfo(id) {\r\n    let todoInfo = todoInfoRef.current.value\r\n    /* if(todoInfo === \"\") return   */\r\n        setTodos(prevTodos => {\r\n            let newTodos = [...prevTodos]\r\n        todo.info = todoInfo\r\n            return newTodos\r\n        })               \r\n}\r\n\r\nfunction setTodoInput() {\r\n    todoInfoRef.current.value = todo.info\r\n}\r\n\r\nfunction onKeyUp(event) {\r\n    if (event.key === \"Enter\") {\r\n      setTodoInfo()\r\n    }\r\n}\r\n    return (\r\n        <div className=\"info-container\">\r\n       <form >\r\n       <textarea className=\"todo-input-info\" onKeyPress={onKeyUp} type=\"text\" ref={todoInfoRef} placeholder={todo.info ? todo.info : \"Enter Info\"} onClick={setTodoInput} />\r\n       </form>\r\n       <button className=\"info-button\" onClick={setTodoInfo}> Set Info</button>\r\n       <button onClick={closeInfo} className=\"delete-button\" > Close </button>\r\n       </div>\r\n    )\r\n}\r\n\r\n","import React, {useState, useRef}  from 'react'\r\nimport TodoInfo from './TodoInfo'\r\n\r\nimport \"../style.css\"\r\n\r\n\r\nexport default function Todo({todos, setTodos, toggleTodo, setTodoInfo}) {\r\nconst [info, setInfo] = useState(false)\r\nconst dateRef = useRef()\r\n \r\n\r\n\r\n    function handleTodoClick() {\r\n        toggleTodo(todos.id)\r\n       \r\n    }\r\n\r\n\r\n    function createInfoPage(todo) {\r\n        setInfo(true)\r\n //how can we render this???\r\n  }\r\n\r\n    function openInfo() {\r\n        //render a popup or we can make popup and use a class to show it.... for multiple though\r\n        // each popup will need data inside it for each todo so we need to use its id, create one for each id \r\n        //create a info component?? append it to the page???\r\n       \r\n        //this todos is refering to the todo clicked    @@@@@@@@@@@\r\n        createInfoPage(todos)\r\n        \r\n    }\r\n\r\n   function saveDate() {\r\n\r\nsetTodos(prevTodos => {\r\n    let newTodos = [...prevTodos]\r\n    let todoDate = dateRef.current.value\r\n    if(todoDate === \"\") { todoDate = \"Enter Date\"}\r\n        todos.date = todoDate\r\n            return newTodos\r\n        })               \r\n}\r\n      \r\n  \r\n\r\n\r\n    return (\r\n        <div className=\"todo-container\">\r\n              <input className=\"checkbox\" type=\"checkbox\" checked={todos.complete} onChange={handleTodoClick} />\r\n            <label className=\"todo-label\">\r\n               {/*  <input type=\"checkbox\" checked={todos.complete} onChange={handleTodoClick} /> */}\r\n               <p className=\"todo-text\"> {todos.name}</p>\r\n            </label>\r\n           <input className=\"todo-input-date\" type=\"text\" placeholder= {todos.date ? `${todos.date}` : \"Enter Date\"} onChange={saveDate}  ref={dateRef}/>\r\n            <button className=\"info-button\" onClick={openInfo}> Info </button>\r\n        {info ? <TodoInfo todo={todos} key={todos.id} info={info} setInfo={setInfo} setTodos={setTodos}  /> : null}\r\n        </div>\r\n    )\r\n    }","import React from 'react'\r\nimport Todo from \"./Todo\"\r\nexport default function TodoList({todos, setTodos}) {\r\n\r\n    function toggleTodo(id) {\r\n        const newTodos = [...todos]\r\n        const todo = newTodos.find(todo => todo.id ===id)\r\n        todo.complete = !todo.complete\r\n        setTodos(newTodos)\r\n     }\r\n\r\n\r\n\r\n    return (\r\n        todos.map(todos => {\r\n            return <Todo key={todos.id} todos={todos} toggleTodo={toggleTodo} setTodos={setTodos}  />\r\n        })\r\n    )\r\n}\r\n","import React, { useState, useEffect }  from 'react'\r\nimport TodoForm from \"./TodoForm\"\r\nimport TodoList from \"./TodoList\"\r\nconst LOCAL_STORAGE_KEY = \"todoApp.todos\"\r\nexport default function TodoComplete() {\r\n    const [todos, setTodos] = useState([])\r\n\r\n  useEffect(() => {\r\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\r\n    if(storedTodos) setTodos(storedTodos)\r\n    }, [])\r\n    \r\n        useEffect(() => {\r\n            localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\r\n        }, [todos])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <TodoForm  todos={todos} setTodos={setTodos}/>\r\n            <TodoList  todos={todos} setTodos={setTodos}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef} from 'react'\r\n\r\n\r\nimport uuid from \"uuidv4\"\r\n\r\n\r\nexport default function TodoForm({tasks, settasks}) {\r\n\r\nconst todoNameRef = useRef()\r\n\r\n    function addTodo(e) {\r\n        e.preventDefault()\r\n        const name = todoNameRef.current.value\r\n         if(name === \"\") return\r\n         settasks(prev => {\r\n             return [...prev, {id: uuid(), name: name, complete: false, info:\"\"}]\r\n         })\r\n         todoNameRef.current.value = null\r\n     }\r\n\r\n    function deleteCheckedTodo() {\r\n        let newTodos = [...tasks]\r\n       newTodos = newTodos.filter(todo => {\r\n        return todo.complete === false\r\n        })\r\n        settasks(newTodos)\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-form-div\">\r\n            <form className=\"todo-form\">\r\n            <input className=\"new-todo-input\" ref={todoNameRef} type=\"text\" />\r\n            <button className=\"add-button\" onClick={addTodo}>Add Task</button>\r\n            </form>\r\n            <button className=\"delete-button\" onClick={deleteCheckedTodo}>Delete Checked Tasks </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useRef} from 'react'\r\nimport \"../style.css\"\r\n\r\n\r\n\r\n\r\nexport default function TodoInfo({task, info, setInfo, settasks}) {\r\n\r\nconst todoInfoRef = useRef()\r\n \r\nfunction closeInfo() {\r\n    setInfo(false)\r\n}\r\n\r\nfunction setTodoInfo(id) {\r\n    let todoInfo = todoInfoRef.current.value\r\n   /*  if(todoInfo === \"\") return   */\r\n        settasks(prevTodos => {\r\n            let newTodos = [...prevTodos]\r\n        task.info = todoInfo\r\n            return newTodos\r\n        })               \r\n}\r\n\r\nfunction setTodoInput() {\r\n    todoInfoRef.current.value = task.info\r\n}\r\n\r\nfunction onKeyUp(event) {\r\n    if (event.key === \"Enter\") {\r\n      setTodoInfo()\r\n    }\r\n}\r\n    return (\r\n        <div className=\"info-container\">\r\n       <form >\r\n       <textarea className=\"todo-input-info\" onKeyPress={onKeyUp} type=\"text\" ref={todoInfoRef} placeholder={task.info ? task.info : \"Enter Info\"} onClick={setTodoInput} />\r\n       </form>\r\n       <button className=\"info-button\" onClick={setTodoInfo}> Set Info</button>\r\n       <button onClick={closeInfo} className=\"delete-button\" > Close </button>\r\n       </div>\r\n    )\r\n}\r\n\r\n","import React, {useState, useRef}  from 'react'\r\nimport TaskInfo from './TaskInfo'\r\n\r\nimport \"../style.css\"\r\n\r\n\r\nexport default function Todo({tasks, settasks, toggleTodo, setTodoInfo}) {\r\nconst [info, setInfo] = useState(false)\r\nconst dateRef = useRef()\r\n \r\n\r\n\r\n    function handleTodoClick() {\r\n        toggleTodo(tasks.id)\r\n        \r\n    }\r\n\r\n\r\n    function createInfoPage(tasks) {\r\n        setInfo(true)\r\n //how can we render this???\r\n  }\r\n\r\n    function openInfo() {\r\n        //render a popup or we can make popup and use a class to show it.... for multiple though\r\n        // each popup will need data inside it for each tasks so we need to use its id, create one for each id \r\n        //create a info component?? append it to the page???\r\n       \r\n        //this tasks is refering to the tasks clicked    @@@@@@@@@@@\r\n        createInfoPage(tasks)\r\n        \r\n    }\r\n\r\n   function saveDate() {\r\n\r\nsettasks(prevTodos => {\r\n    let newTodos = [...prevTodos]\r\n    let todoDate = dateRef.current.value\r\n    if(todoDate === \"\") { todoDate = \"Enter Date\"}\r\n        tasks.date = todoDate\r\n            return newTodos\r\n        })               \r\n}\r\n      \r\n  \r\n\r\n\r\n    return (\r\n        <div  className=\"todo-container\">\r\n            <label  className=\"todo-label\">\r\n                <input type=\"checkbox\" checked={tasks.complete} onChange={handleTodoClick} />\r\n               <p className=\"todo-text\"> {tasks.name}</p>\r\n            </label>\r\n           <input className=\"todo-input-date\" type=\"text\" placeholder= {tasks.date ? `${tasks.date}` : \"Enter Date\"} onChange={saveDate}  ref={dateRef}/>\r\n            <button className=\"info-button\" onClick={openInfo}> Info </button>\r\n        {info ? <TaskInfo task={tasks} key={tasks.id} info={info} setInfo={setInfo} settasks={settasks}  /> : null}\r\n        </div>\r\n    )\r\n    }\r\n\r\n ","import React from 'react'\r\nimport Task from \"./Task\"\r\nexport default function TodoList({tasks, settasks}) {\r\n\r\n    function toggleTodo(id) {\r\n        const newTodos = [...tasks]\r\n        const todo = newTodos.find(todo => todo.id ===id)\r\n        todo.complete = !todo.complete\r\n        settasks(newTodos)\r\n     }\r\n\r\n\r\n\r\n    return (\r\n        tasks.map(tasks => {\r\n            return <Task key={tasks.id} tasks={tasks} toggleTodo={toggleTodo} settasks={settasks}  />\r\n        })\r\n    )\r\n}\r\n","import React, { useState, useEffect }  from 'react'\r\nimport TaskForm from \"./TaskForm\"\r\nimport TaskList from \"./TaskList\"\r\nconst LOCAL_STORAGE_KEY = \"todoApp.tasks\"\r\nexport default function TodoComplete() {\r\n    const [tasks, settasks] = useState([])\r\n\r\n  useEffect(() => {\r\n    const storedTasks = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\r\n    if(storedTasks) settasks(storedTasks)\r\n    }, [])\r\n    \r\n        useEffect(() => {\r\n            localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(tasks))\r\n        }, [tasks])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <TaskForm  tasks={tasks} settasks={settasks}/>\r\n            <TaskList  tasks={tasks} settasks={settasks}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef} from 'react'\r\n\r\n\r\nimport uuid from \"uuidv4\"\r\n\r\n\r\n\r\nexport default function TodoForm({goals, setgoals}) {\r\n\r\nconst todoNameRef = useRef()\r\n\r\n    function addTodo(e) {\r\n        e.preventDefault()\r\n        const name = todoNameRef.current.value\r\n         if(name === \"\") return\r\n         setgoals(prev => {\r\n             return [...prev, {id: uuid(), name: name, complete: false, info:\"\"}]\r\n         })\r\n         todoNameRef.current.value = null\r\n     }\r\n\r\n    function deleteCheckedTodo() {\r\n        let newTodos = [...goals]\r\n       newTodos = newTodos.filter(todo => {\r\n        return todo.complete === false\r\n        })\r\n        setgoals(newTodos)\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-form-div\">\r\n            <form className=\"todo-form\">\r\n            <input className=\"new-todo-input\" ref={todoNameRef} type=\"text\" />\r\n            <button className=\"add-button\" onClick={addTodo}>Add Goal</button>\r\n            </form>\r\n            <button className=\"delete-button\" onClick={deleteCheckedTodo}>Delete Checked Goals </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useRef} from 'react'\r\nimport \"../style.css\"\r\n\r\n\r\n\r\n\r\nexport default function TodoInfo({goal, info, setInfo, setgoals}) {\r\n\r\nconst todoInfoRef = useRef()\r\n \r\nfunction closeInfo() {\r\n    setInfo(false)\r\n}\r\n\r\nfunction setTodoInfo(id) {\r\n    let todoInfo = todoInfoRef.current.value\r\n   /*  if(todoInfo === \"\") return   */\r\n        setgoals(prevTodos => {\r\n            let newTodos = [...prevTodos]\r\n        goal.info = todoInfo\r\n            return newTodos\r\n        })               \r\n}\r\n\r\nfunction setTodoInput() {\r\n    todoInfoRef.current.value = goal.info\r\n}\r\n\r\nfunction onKeyUp(event) {\r\n    if (event.key === \"Enter\") {\r\n      setTodoInfo()\r\n    }\r\n}\r\n    return (\r\n       \r\n        <div className=\"info-container\">\r\n       <form >\r\n       <textarea className=\"todo-input-info\" onKeyPress={onKeyUp} type=\"text\" ref={todoInfoRef} placeholder={goal.info ? goal.info : \"Enter Info\"} onClick={setTodoInput} />\r\n       </form>\r\n       <button className=\"info-button\" onClick={setTodoInfo}> Set Info</button>\r\n       <button onClick={closeInfo} className=\"delete-button\" > Close </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useState, useRef}  from 'react'\r\nimport GoalInfo from './GoalInfo'\r\n\r\nimport \"../style.css\"\r\n\r\n\r\nexport default function Todo({goals, setgoals, toggleTodo, setTodoInfo}) {\r\nconst [info, setInfo] = useState(false)\r\nconst dateRef = useRef()\r\n \r\n\r\n\r\n    function handleTodoClick() {\r\n        toggleTodo(goals.id)\r\n      \r\n    }\r\n\r\n\r\n    function createInfoPage(todo) {\r\n        setInfo(true)\r\n //how can we render this???\r\n  }\r\n\r\n    function openInfo() {\r\n        //render a popup or we can make popup and use a class to show it.... for multiple though\r\n        // each popup will need data inside it for each todo so we need to use its id, create one for each id \r\n        //create a info component?? append it to the page???\r\n       \r\n        //this goals is refering to the todo clicked    @@@@@@@@@@@\r\n        createInfoPage(goals)\r\n        \r\n    }\r\n\r\n   function saveDate() {\r\n\r\nsetgoals(prevTodos => {\r\n    let newTodos = [...prevTodos]\r\n    let todoDate = dateRef.current.value\r\n    if(todoDate === \"\") { todoDate = \"Enter Date\"}\r\n        goals.date = todoDate\r\n            return newTodos\r\n        })               \r\n}\r\n      \r\n  \r\n\r\n\r\n    return (\r\n        <div  className=\"todo-container\">\r\n            <label className=\"todo-label\">\r\n                <input type=\"checkbox\" checked={goals.complete} onChange={handleTodoClick} />\r\n               <p className=\"todo-text\"> {goals.name}</p>\r\n            </label>\r\n           <input className=\"todo-input-date\" type=\"text\" placeholder= {goals.date ? `${goals.date}` : \"Date\"} onChange={saveDate}  ref={dateRef}/>\r\n            <button className=\"info-button\" onClick={openInfo}> Info </button>\r\n        {info ? <GoalInfo goal={goals} key={goals.id} info={info} setInfo={setInfo} setgoals={setgoals}  /> : null}\r\n        </div>\r\n    )\r\n    }\r\n\r\n   ","import React from 'react'\r\nimport Goal from \"./Goal\"\r\nexport default function TodoList({goals, setgoals}) {\r\n\r\n    function toggleTodo(id) {\r\n        const newTodos = [...goals]\r\n        const todo = newTodos.find(todo => todo.id ===id)\r\n        todo.complete = !todo.complete\r\n        setgoals(newTodos)\r\n     }\r\n\r\n\r\n\r\n    return (\r\n        goals.map(goals => {\r\n            return <Goal key={goals.id} goals={goals} toggleTodo={toggleTodo} setgoals={setgoals}  />\r\n        })\r\n    )\r\n}\r\n","import React, { useState, useEffect }  from 'react'\r\nimport GoalForm from \"./GoalForm\"\r\nimport GoalList from \"./GoalList\"\r\nconst LOCAL_STORAGE_KEY = \"todoApp.goals\"\r\nexport default function TodoComplete() {\r\n    const [goals, setgoals] = useState([])\r\n\r\n  useEffect(() => {\r\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\r\n    if(storedTodos) setgoals(storedTodos)\r\n    }, [])\r\n    \r\n        useEffect(() => {\r\n            localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(goals))\r\n        }, [goals])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <GoalForm  goals={goals} setgoals={setgoals}/>\r\n            <GoalList  goals={goals} setgoals={setgoals}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport styled from \"styled-components\"\nimport Nav from \"./components/Nav\"\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\nimport \"./components/style.css\"\n\nimport TodoComplete from \"./components/Todo/TodoComplete\"\nimport TaskComplete from \"./components/Task/TaskComplete\"\nimport GoalComplete from \"./components/Goal/GoalComplete\"\n//TODO: \n// style list/mobile\n \n\n\nconst Container = styled.div`\nwidth: 70vw;\nheight: auto;\nbackground-color: #2E2727;\nmargin:auto;\ntop:0;\nleft:15vw;\npadding-bottom: 3%;\nmin-height:75vh;\n\n\n@media screen and (max-width:830px){\nwidth: 90vw;\n}\n`\n\n\n\nfunction App() {\n\n\n       \n//runs twice due to useeffect\n  return (\n    \n<Router>\n<Container>\n<Nav />\n<Route path=\"/Productivity-App\" exact  component={TodoComplete} />\n<Route path=\"/Productivity-App/custom\" exact component={TaskComplete} />\n<Route path=\"/Productivity-App/long\" exact component={GoalComplete} />\n</Container>\n</Router>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}